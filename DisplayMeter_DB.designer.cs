#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DisplayMeter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DisplayMeter")]
	public partial class DisplayMeter_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmas_Lack(mas_Lack instance);
    partial void Updatemas_Lack(mas_Lack instance);
    partial void Deletemas_Lack(mas_Lack instance);
    partial void Inserttran_LogMeter(tran_LogMeter instance);
    partial void Updatetran_LogMeter(tran_LogMeter instance);
    partial void Deletetran_LogMeter(tran_LogMeter instance);
    partial void Insertsec_User(sec_User instance);
    partial void Updatesec_User(sec_User instance);
    partial void Deletesec_User(sec_User instance);
    #endregion
		
		public DisplayMeter_DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DisplayMeterConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DisplayMeter_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DisplayMeter_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DisplayMeter_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DisplayMeter_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mas_Lack> mas_Lacks
		{
			get
			{
				return this.GetTable<mas_Lack>();
			}
		}
		
		public System.Data.Linq.Table<tran_LogMeter> tran_LogMeters
		{
			get
			{
				return this.GetTable<tran_LogMeter>();
			}
		}
		
		public System.Data.Linq.Table<sec_User> sec_Users
		{
			get
			{
				return this.GetTable<sec_User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.stp_get_LastMeter")]
		public ISingleResult<stp_get_LastMeterResult> stp_get_LastMeter()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<stp_get_LastMeterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.stp_get_LastMeter_ByLackUniq")]
		public ISingleResult<stp_get_LastMeter_ByLackUniqResult> stp_get_LastMeter_ByLackUniq([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LackUniq", DbType="UniqueIdentifier")] System.Nullable<System.Guid> lackUniq)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lackUniq);
			return ((ISingleResult<stp_get_LastMeter_ByLackUniqResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mas_Lack")]
	public partial class mas_Lack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LackUniq;
		
		private string _LackDescription;
		
		private string _LackIPAddress;
		
		private double _LackSorting;
		
		private System.DateTime _LogDate;
		
		private EntitySet<tran_LogMeter> _tran_LogMeters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLackUniqChanging(System.Guid value);
    partial void OnLackUniqChanged();
    partial void OnLackDescriptionChanging(string value);
    partial void OnLackDescriptionChanged();
    partial void OnLackIPAddressChanging(string value);
    partial void OnLackIPAddressChanged();
    partial void OnLackSortingChanging(double value);
    partial void OnLackSortingChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    #endregion
		
		public mas_Lack()
		{
			this._tran_LogMeters = new EntitySet<tran_LogMeter>(new Action<tran_LogMeter>(this.attach_tran_LogMeters), new Action<tran_LogMeter>(this.detach_tran_LogMeters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackUniq", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LackUniq
		{
			get
			{
				return this._LackUniq;
			}
			set
			{
				if ((this._LackUniq != value))
				{
					this.OnLackUniqChanging(value);
					this.SendPropertyChanging();
					this._LackUniq = value;
					this.SendPropertyChanged("LackUniq");
					this.OnLackUniqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LackDescription
		{
			get
			{
				return this._LackDescription;
			}
			set
			{
				if ((this._LackDescription != value))
				{
					this.OnLackDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LackDescription = value;
					this.SendPropertyChanged("LackDescription");
					this.OnLackDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackIPAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LackIPAddress
		{
			get
			{
				return this._LackIPAddress;
			}
			set
			{
				if ((this._LackIPAddress != value))
				{
					this.OnLackIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LackIPAddress = value;
					this.SendPropertyChanged("LackIPAddress");
					this.OnLackIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackSorting", DbType="Float NOT NULL")]
		public double LackSorting
		{
			get
			{
				return this._LackSorting;
			}
			set
			{
				if ((this._LackSorting != value))
				{
					this.OnLackSortingChanging(value);
					this.SendPropertyChanging();
					this._LackSorting = value;
					this.SendPropertyChanged("LackSorting");
					this.OnLackSortingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mas_Lack_tran_LogMeter", Storage="_tran_LogMeters", ThisKey="LackUniq", OtherKey="LackUniq")]
		public EntitySet<tran_LogMeter> tran_LogMeters
		{
			get
			{
				return this._tran_LogMeters;
			}
			set
			{
				this._tran_LogMeters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tran_LogMeters(tran_LogMeter entity)
		{
			this.SendPropertyChanging();
			entity.mas_Lack = this;
		}
		
		private void detach_tran_LogMeters(tran_LogMeter entity)
		{
			this.SendPropertyChanging();
			entity.mas_Lack = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tran_LogMeter")]
	public partial class tran_LogMeter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LogUniq;
		
		private System.Guid _LackUniq;
		
		private decimal _LogMeter;
		
		private System.DateTime _LogDate;
		
		private EntityRef<mas_Lack> _mas_Lack;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogUniqChanging(System.Guid value);
    partial void OnLogUniqChanged();
    partial void OnLackUniqChanging(System.Guid value);
    partial void OnLackUniqChanged();
    partial void OnLogMeterChanging(decimal value);
    partial void OnLogMeterChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    #endregion
		
		public tran_LogMeter()
		{
			this._mas_Lack = default(EntityRef<mas_Lack>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUniq", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LogUniq
		{
			get
			{
				return this._LogUniq;
			}
			set
			{
				if ((this._LogUniq != value))
				{
					this.OnLogUniqChanging(value);
					this.SendPropertyChanging();
					this._LogUniq = value;
					this.SendPropertyChanged("LogUniq");
					this.OnLogUniqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackUniq", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LackUniq
		{
			get
			{
				return this._LackUniq;
			}
			set
			{
				if ((this._LackUniq != value))
				{
					if (this._mas_Lack.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLackUniqChanging(value);
					this.SendPropertyChanging();
					this._LackUniq = value;
					this.SendPropertyChanged("LackUniq");
					this.OnLackUniqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMeter", DbType="Decimal(18,5) NOT NULL")]
		public decimal LogMeter
		{
			get
			{
				return this._LogMeter;
			}
			set
			{
				if ((this._LogMeter != value))
				{
					this.OnLogMeterChanging(value);
					this.SendPropertyChanging();
					this._LogMeter = value;
					this.SendPropertyChanged("LogMeter");
					this.OnLogMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mas_Lack_tran_LogMeter", Storage="_mas_Lack", ThisKey="LackUniq", OtherKey="LackUniq", IsForeignKey=true)]
		public mas_Lack mas_Lack
		{
			get
			{
				return this._mas_Lack.Entity;
			}
			set
			{
				mas_Lack previousValue = this._mas_Lack.Entity;
				if (((previousValue != value) 
							|| (this._mas_Lack.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mas_Lack.Entity = null;
						previousValue.tran_LogMeters.Remove(this);
					}
					this._mas_Lack.Entity = value;
					if ((value != null))
					{
						value.tran_LogMeters.Add(this);
						this._LackUniq = value.LackUniq;
					}
					else
					{
						this._LackUniq = default(System.Guid);
					}
					this.SendPropertyChanged("mas_Lack");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sec_User")]
	public partial class sec_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserUniq;
		
		private string _UserName;
		
		private string _Passwd;
		
		private string _UserDescription;
		
		private System.DateTime _LogDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserUniqChanging(System.Guid value);
    partial void OnUserUniqChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswdChanging(string value);
    partial void OnPasswdChanged();
    partial void OnUserDescriptionChanging(string value);
    partial void OnUserDescriptionChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    #endregion
		
		public sec_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUniq", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserUniq
		{
			get
			{
				return this._UserUniq;
			}
			set
			{
				if ((this._UserUniq != value))
				{
					this.OnUserUniqChanging(value);
					this.SendPropertyChanging();
					this._UserUniq = value;
					this.SendPropertyChanged("UserUniq");
					this.OnUserUniqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwd", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Passwd
		{
			get
			{
				return this._Passwd;
			}
			set
			{
				if ((this._Passwd != value))
				{
					this.OnPasswdChanging(value);
					this.SendPropertyChanging();
					this._Passwd = value;
					this.SendPropertyChanged("Passwd");
					this.OnPasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDescription", DbType="NVarChar(100)")]
		public string UserDescription
		{
			get
			{
				return this._UserDescription;
			}
			set
			{
				if ((this._UserDescription != value))
				{
					this.OnUserDescriptionChanging(value);
					this.SendPropertyChanging();
					this._UserDescription = value;
					this.SendPropertyChanged("UserDescription");
					this.OnUserDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class stp_get_LastMeterResult
	{
		
		private System.Guid _LackUniq;
		
		private string _LackDescription;
		
		private string _LackIPAddress;
		
		private decimal _LogMeter;
		
		private System.DateTime _LogDate;
		
		public stp_get_LastMeterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackUniq", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LackUniq
		{
			get
			{
				return this._LackUniq;
			}
			set
			{
				if ((this._LackUniq != value))
				{
					this._LackUniq = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LackDescription
		{
			get
			{
				return this._LackDescription;
			}
			set
			{
				if ((this._LackDescription != value))
				{
					this._LackDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackIPAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LackIPAddress
		{
			get
			{
				return this._LackIPAddress;
			}
			set
			{
				if ((this._LackIPAddress != value))
				{
					this._LackIPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMeter", DbType="Decimal(18,5) NOT NULL")]
		public decimal LogMeter
		{
			get
			{
				return this._LogMeter;
			}
			set
			{
				if ((this._LogMeter != value))
				{
					this._LogMeter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this._LogDate = value;
				}
			}
		}
	}
	
	public partial class stp_get_LastMeter_ByLackUniqResult
	{
		
		private System.Guid _LogUniq;
		
		private System.Guid _LackUniq;
		
		private string _LackDescription;
		
		private string _LackIPAddress;
		
		private double _LackSorting;
		
		private decimal _LogMeter;
		
		private System.DateTime _LastUpdate;
		
		public stp_get_LastMeter_ByLackUniqResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUniq", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LogUniq
		{
			get
			{
				return this._LogUniq;
			}
			set
			{
				if ((this._LogUniq != value))
				{
					this._LogUniq = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackUniq", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LackUniq
		{
			get
			{
				return this._LackUniq;
			}
			set
			{
				if ((this._LackUniq != value))
				{
					this._LackUniq = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LackDescription
		{
			get
			{
				return this._LackDescription;
			}
			set
			{
				if ((this._LackDescription != value))
				{
					this._LackDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackIPAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LackIPAddress
		{
			get
			{
				return this._LackIPAddress;
			}
			set
			{
				if ((this._LackIPAddress != value))
				{
					this._LackIPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LackSorting", DbType="Float NOT NULL")]
		public double LackSorting
		{
			get
			{
				return this._LackSorting;
			}
			set
			{
				if ((this._LackSorting != value))
				{
					this._LackSorting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMeter", DbType="Decimal(18,5) NOT NULL")]
		public decimal LogMeter
		{
			get
			{
				return this._LogMeter;
			}
			set
			{
				if ((this._LogMeter != value))
				{
					this._LogMeter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this._LastUpdate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
